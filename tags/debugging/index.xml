<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>debugging on Santiago Pastorino</title><link>https://santiagopastorino.com/tags/debugging/</link><description>Recent content in debugging on Santiago Pastorino</description><generator>Hugo -- gohugo.io</generator><managingEditor>spastorino@gmail.com (Santiago Pastorino)</managingEditor><webMaster>spastorino@gmail.com (Santiago Pastorino)</webMaster><lastBuildDate>Wed, 18 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://santiagopastorino.com/tags/debugging/index.xml" rel="self" type="application/rss+xml"/><item><title>Bisecting Rust Compiler Regressions with cargo-bisect-rustc</title><link>https://santiagopastorino.com/2019/12/18/bisecting-rust-compiler/</link><pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate><author>spastorino@gmail.com (Santiago Pastorino)</author><guid>https://santiagopastorino.com/2019/12/18/bisecting-rust-compiler/</guid><description>This article is cross-posted from Inside Rust blog.
Let&amp;rsquo;s say that you&amp;rsquo;ve just updated the Rust compiler version and have tried to compile your application and see a failure that wasn&amp;rsquo;t there before. That&amp;rsquo;s likely due to a regression in the compiler. We&amp;rsquo;ve just released cargo-bisect-rustc, a tool that makes it super easy to find exactly when the regression happened.
cargo-bisect-rustc automatically downloads rustc artifacts and tests them against a project you provide until it finds the regression.</description></item></channel></rss>